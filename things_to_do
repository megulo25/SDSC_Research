Things to do:

- Finish code that will generate heatmap.

1. Train model
2. Output image with predicted class and true class
3. Implement 'two-headed monster' that would output the parent and child class of input.
3. Output confusion matrix 
4. Output Heat Map

- Get the training set up with keras' checkpoint callback function. 
- The model will only save a checkpoint when there is improvement.
- Good Link: 
    * https://machinelearningmastery.com/check-point-deep-learning-models-keras/
    * https://keras.io/callbacks/#modelcheckpoint
    * https://keras.io/preprocessing/image/

- Got an accurate model!

- Train the north america dataset
    - Parent class: Last word in the name
    - Everything else is the name of its subclass
    - Train a network on both at the same time.
        - Should output both classes.


- Have a confusion matrix
    - 400 x 400 matrix of predicted vs true classes
    - Use scikit-learn: http://scikit-learn.org/stable/modules/generated/sklearn.metrics.confusion_matrix.html

- Heatmap of the image. Highlight important pixels in image.
    * http://heatmapping.org/